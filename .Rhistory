outdata<-indata %>%
select(studyName,programName,studyName,studyDesign,plotWidth:fieldSize,
plantingDate,harvestDate,locationName,germplasmName,
replicate,blockNumber,plotNumber,rowNumber,colNumber,entryType,
trialType:numberReps,folderName,TrialType,
traitabbrevs$TraitName) %>%
pivot_longer(cols = traitabbrevs$TraitName,
names_to = "TraitName",
values_to = "Value") %>%
left_join(.,traitabbrevs) %>%
select(-TraitName) %>%
pivot_wider(names_from = TraitAbbrev,
values_from = "Value")
return(outdata) }
dbdata %>% colnames %>% grep("cassava.mosaic.disease.severity.*.month",.,value = T)
dbdata %>% colnames %>% grep("dry.matter",.,value = T)
dbdata %>% colnames %>% grep("plant.height.measurement.in.cm",.,value = T)
dbdata %>% colnames %>% grep("first.apical.branch.height.measurement.in.cm",.,value = T)
dbdata %>% colnames %>% grep("fresh.shoot.weight.measurement.in.kg.per.plot",.,value = T)
dbdata %>% colnames %>% grep("fresh.storage.root.weight.per.plot",.,value = T)
dbdata %>% colnames %>% grep("root.number.counting",.,value = T)
dbdata %>% colnames %>% grep("total.carotenoid.by.chart.1.8",.,value = T)
dbdata %>% colnames %>% .[240:length(.)]
traitabbrevs<-tribble(~TraitAbbrev,~TraitName,
"CMD1S","cassava.mosaic.disease.severity.1.month.evaluation.CO_334.0000191",
"CMD3S","cassava.mosaic.disease.severity.3.month.evaluation.CO_334.0000192",
"CMD6S","cassava.mosaic.disease.severity.6.month.evaluation.CO_334.0000194",
"CMD9S","cassava.mosaic.disease.severity.9.month.evaluation.CO_334.0000193",
"DM","dry.matter.content.percentage.CO_334.0000092",
"PLTHT","plant.height.measurement.in.cm.CO_334.0000018",
"BRNHT1","first.apical.branch.height.measurement.in.cm.CO_334.0000106",
"SHTWT","fresh.shoot.weight.measurement.in.kg.per.plot.CO_334.0000016",
"RTWT","fresh.storage.root.weight.per.plot.CO_334.0000012",
"RTNO","root.number.counting.CO_334.0000011",
"TCHART","total.carotenoid.by.chart.1.8.CO_334.0000161",
"NOHAV","plant.stands.harvested.counting.CO_334.0000010",
"TrialType","TrialType")
knitr::kable(traitabbrevs,booktabs=TRUE)
dbdata<-renameAndSelectCols(traitabbrevs,indata=dbdata)
return(outdata) }
renameAndSelectCols<-function(traitabbrevs,indata){
# data.frame: 2 cols, TraitAbbrev and TraitName
# TraitName should match exactly to cassava ontology names
# Any custom (non cassavabase) columns you create and want to keep should be listed in the input df
outdata<-indata %>%
select(studyName,programName,studyName,studyDesign,plotWidth:fieldSize,
plantingDate,harvestDate,locationName,germplasmName,
replicate,blockNumber,plotNumber,rowNumber,colNumber,entryType,
trialType:numberReps,folderName,
traitabbrevs$TraitName) %>%
pivot_longer(cols = traitabbrevs$TraitName,
names_to = "TraitName",
values_to = "Value") %>%
left_join(.,traitabbrevs) %>%
select(-TraitName) %>%
pivot_wider(names_from = TraitAbbrev,
values_from = "Value")
return(outdata) }
traitabbrevs<-tribble(~TraitAbbrev,~TraitName,
"CMD1S","cassava.mosaic.disease.severity.1.month.evaluation.CO_334.0000191",
"CMD3S","cassava.mosaic.disease.severity.3.month.evaluation.CO_334.0000192",
"CMD6S","cassava.mosaic.disease.severity.6.month.evaluation.CO_334.0000194",
"CMD9S","cassava.mosaic.disease.severity.9.month.evaluation.CO_334.0000193",
"DM","dry.matter.content.percentage.CO_334.0000092",
"PLTHT","plant.height.measurement.in.cm.CO_334.0000018",
"BRNHT1","first.apical.branch.height.measurement.in.cm.CO_334.0000106",
"SHTWT","fresh.shoot.weight.measurement.in.kg.per.plot.CO_334.0000016",
"RTWT","fresh.storage.root.weight.per.plot.CO_334.0000012",
"RTNO","root.number.counting.CO_334.0000011",
"TCHART","total.carotenoid.by.chart.1.8.CO_334.0000161",
"NOHAV","plant.stands.harvested.counting.CO_334.0000010",
"TrialType","TrialType")
knitr::kable(traitabbrevs,booktabs=TRUE)
dbdata<-renameAndSelectCols(traitabbrevs,indata=dbdata)
renameAndSelectCols<-function(traitabbrevs,indata){
# data.frame: 2 cols, TraitAbbrev and TraitName
# TraitName should match exactly to cassava ontology names
# Any custom (non cassavabase) columns you create and want to keep should be listed in the input df
outdata<-indata %>%
select(studyName,programName,studyName,studyDesign,plotWidth:fieldSize,
plantingDate,harvestDate,locationName,germplasmName,
replicate,blockNumber,plotNumber,rowNumber,colNumber,entryType,
trialType:numberReps,folderName,TrialType
traitabbrevs$TraitName) %>%
renameAndSelectCols<-function(traitabbrevs,indata){
# data.frame: 2 cols, TraitAbbrev and TraitName
# TraitName should match exactly to cassava ontology names
# Any custom (non cassavabase) columns you create and want to keep should be listed in the input df
outdata<-indata %>%
select(studyName,programName,studyName,studyDesign,plotWidth:fieldSize,
plantingDate,harvestDate,locationName,germplasmName,
replicate,blockNumber,plotNumber,rowNumber,colNumber,entryType,
trialType:numberReps,folderName,TrialType
traitabbrevs$TraitName) %>%
renameAndSelectCols<-function(traitabbrevs,indata){
# data.frame: 2 cols, TraitAbbrev and TraitName
# TraitName should match exactly to cassava ontology names
# Any custom (non cassavabase) columns you create and want to keep should be listed in the input df
outdata<-indata %>%
select(studyName,programName,studyName,studyDesign,plotWidth:fieldSize,
plantingDate,harvestDate,locationName,germplasmName,
replicate,blockNumber,plotNumber,rowNumber,colNumber,entryType,
trialType:numberReps,folderName,TrialType
traitabbrevs$TraitName) %>%
# data.frame: 2 cols, TraitAbbrev and TraitName
# TraitName should match exactly to cassava ontology names
# Any custom (non cassavabase) columns you create and want to keep should be listed in the input df
outdata<-indata %>%
select(studyName,programName,studyName,studyDesign,plotWidth:fieldSize,
plantingDate,harvestDate,locationName,germplasmName,
replicate,blockNumber,plotNumber,rowNumber,colNumber,entryType,
trialType:numberReps,folderName,TrialType,
traitabbrevs$TraitName) %>%
pivot_longer(cols = traitabbrevs$TraitName,
names_to = "TraitName",
values_to = "Value") %>%
left_join(.,traitabbrevs) %>%
select(-TraitName) %>%
pivot_wider(names_from = TraitAbbrev,
values_from = "Value")
renameAndSelectCols<-function(traitabbrevs,indata){
# data.frame: 2 cols, TraitAbbrev and TraitName
# TraitName should match exactly to cassava ontology names
# Any custom (non cassavabase) columns you create and want to keep should be listed in the input df
outdata<-indata %>%
select(studyName,programName,studyName,studyDesign,plotWidth:fieldSize,
plantingDate,harvestDate,locationName,germplasmName,
replicate,blockNumber,plotNumber,rowNumber,colNumber,entryType,
trialType:numberReps,folderName,TrialType,
traitabbrevs$TraitName) %>%
pivot_longer(cols = traitabbrevs$TraitName,
names_to = "TraitName",
values_to = "Value") %>%
left_join(.,traitabbrevs) %>%
select(-TraitName) %>%
pivot_wider(names_from = TraitAbbrev,
values_from = "Value")
return(outdata) }
traitabbrevs<-tribble(~TraitAbbrev,~TraitName,
"CMD1S","cassava.mosaic.disease.severity.1.month.evaluation.CO_334.0000191",
"CMD3S","cassava.mosaic.disease.severity.3.month.evaluation.CO_334.0000192",
"CMD6S","cassava.mosaic.disease.severity.6.month.evaluation.CO_334.0000194",
"CMD9S","cassava.mosaic.disease.severity.9.month.evaluation.CO_334.0000193",
"DM","dry.matter.content.percentage.CO_334.0000092",
"PLTHT","plant.height.measurement.in.cm.CO_334.0000018",
"BRNHT1","first.apical.branch.height.measurement.in.cm.CO_334.0000106",
"SHTWT","fresh.shoot.weight.measurement.in.kg.per.plot.CO_334.0000016",
"RTWT","fresh.storage.root.weight.per.plot.CO_334.0000012",
"RTNO","root.number.counting.CO_334.0000011",
"TCHART","total.carotenoid.by.chart.1.8.CO_334.0000161",
"NOHAV","plant.stands.harvested.counting.CO_334.0000010")
knitr::kable(traitabbrevs,booktabs=TRUE)
renameAndSelectCols<-function(traitabbrevs,indata,
customColsToKeep){
# @indata: data.frame with 2 cols (TraitAbbrev and TraitName)
### TraitName should match exactly to cassava ontology names
# @customColsToKeep: char. vec. of any custom cols you added and want to keep
outdata<-indata %>%
select(studyName,programName,studyName,studyDesign,plotWidth:fieldSize,
plantingDate,harvestDate,locationName,germplasmName,
replicate,blockNumber,plotNumber,rowNumber,colNumber,entryType,
trialType:numberReps,folderName,
customColsToKeep,
traitabbrevs$TraitName) %>%
pivot_longer(cols = traitabbrevs$TraitName,
names_to = "TraitName",
values_to = "Value") %>%
left_join(.,traitabbrevs) %>%
select(-TraitName) %>%
pivot_wider(names_from = TraitAbbrev,
values_from = "Value")
return(outdata) }
traitabbrevs<-tribble(~TraitAbbrev,~TraitName,
"CMD1S","cassava.mosaic.disease.severity.1.month.evaluation.CO_334.0000191",
"CMD3S","cassava.mosaic.disease.severity.3.month.evaluation.CO_334.0000192",
"CMD6S","cassava.mosaic.disease.severity.6.month.evaluation.CO_334.0000194",
"CMD9S","cassava.mosaic.disease.severity.9.month.evaluation.CO_334.0000193",
"DM","dry.matter.content.percentage.CO_334.0000092",
"PLTHT","plant.height.measurement.in.cm.CO_334.0000018",
"BRNHT1","first.apical.branch.height.measurement.in.cm.CO_334.0000106",
"SHTWT","fresh.shoot.weight.measurement.in.kg.per.plot.CO_334.0000016",
"RTWT","fresh.storage.root.weight.per.plot.CO_334.0000012",
"RTNO","root.number.counting.CO_334.0000011",
"TCHART","total.carotenoid.by.chart.1.8.CO_334.0000161",
"NOHAV","plant.stands.harvested.counting.CO_334.0000010")
dbdata<-renameAndSelectCols(traitabbrevs,indata=dbdata,customColsToKeep = "TrialType")
dbdata<-renameAndSelectCols(traitabbrevs,indata=dbdata,customColsToKeep = TrialType)
readDBdata<-function(phenotypeFile,metadataFile){
pheno<-read.csv(phenotypeFile,
na.strings = c("#VALUE!",NA,".",""," ","-","\""),
stringsAsFactors = F)
meta<-read.csv(metadataFile,
na.strings = c("#VALUE!",NA,".",""," ","-","\""),
stringsAsFactors = F) %>%
rename(programName=breedingProgramName,
programDescription=breedingProgramDescription,
programDbId=breedingProgramDbId)
indata<-left_join(pheno,meta) %>%
filter(observationLevel=="plot")
return(indata) }
phenotypeFile<-"data/example_phenotype_download.csv"
metadataFile<-"data/example_metadata_download.csv"
dbdata<-readDBdata(phenotypeFile,metadataFile)
makeTrialTypeVar<-function(indata){
# This is peculiar to what works (for me) for IITA
# Can customize this or add lines to grab TrialTypes for each breeding program
outdata<-indata %>%
mutate(TrialType=ifelse(grepl("CE|clonal|13NEXTgenC1",studyName,ignore.case = T),"CET",NA),
TrialType=ifelse(grepl("EC",studyName,ignore.case = T),"ExpCET",TrialType),
TrialType=ifelse(grepl("PYT",studyName,ignore.case = T),"PYT",TrialType),
TrialType=ifelse(grepl("AYT",studyName,ignore.case = T),"AYT",TrialType),
TrialType=ifelse(grepl("UYT",studyName,ignore.case = T),"UYT",TrialType),
TrialType=ifelse(grepl("geneticgain|gg|genetic gain",studyName,ignore.case = T),"GeneticGain",TrialType),
TrialType=ifelse(grepl("Cassava",studyName,ignore.case = T) & grepl("/",studyName),"GeneticGain",TrialType),
TrialType=ifelse((grepl("clonal evaluation trial",!grepl("genetic gain",studyDescription,ignore.case = T),
ignore.case = T)),"CET",TrialType),
TrialType=ifelse(grepl("preliminary yield trial",studyDescription,ignore.case = T),"PYT",TrialType),
TrialType=ifelse(grepl("Crossingblock|GS.C4.CB|cross",studyName) & is.na(TrialType),"CrossingBlock",TrialType),
TrialType=ifelse(grepl("NCRP",studyName) & is.na(TrialType),"NCRP",TrialType),
TrialType=ifelse(grepl("conservation",studyName) & is.na(TrialType),"Conservation",TrialType))
return(outdata) }
dbdata<-makeTrialTypeVar(dbdata)
renameAndSelectCols<-function(traitabbrevs,indata,
customColsToKeep){
# @indata: data.frame with 2 cols (TraitAbbrev and TraitName)
### TraitName should match exactly to cassava ontology names
# @customColsToKeep: char. vec. of any custom cols you added and want to keep
outdata<-indata %>%
select(studyName,programName,studyName,studyDesign,plotWidth:fieldSize,
plantingDate,harvestDate,locationName,germplasmName,
replicate,blockNumber,plotNumber,rowNumber,colNumber,entryType,
trialType:numberReps,folderName,
all_of(customColsToKeep),
all_of(traitabbrevs$TraitName)) %>%
pivot_longer(cols = traitabbrevs$TraitName,
names_to = "TraitName",
values_to = "Value") %>%
left_join(.,traitabbrevs) %>%
select(-TraitName) %>%
pivot_wider(names_from = TraitAbbrev,
values_from = "Value")
return(outdata) }
traitabbrevs<-tribble(~TraitAbbrev,~TraitName,
"CMD1S","cassava.mosaic.disease.severity.1.month.evaluation.CO_334.0000191",
"CMD3S","cassava.mosaic.disease.severity.3.month.evaluation.CO_334.0000192",
"CMD6S","cassava.mosaic.disease.severity.6.month.evaluation.CO_334.0000194",
"CMD9S","cassava.mosaic.disease.severity.9.month.evaluation.CO_334.0000193",
"DM","dry.matter.content.percentage.CO_334.0000092",
"PLTHT","plant.height.measurement.in.cm.CO_334.0000018",
"BRNHT1","first.apical.branch.height.measurement.in.cm.CO_334.0000106",
"SHTWT","fresh.shoot.weight.measurement.in.kg.per.plot.CO_334.0000016",
"RTWT","fresh.storage.root.weight.per.plot.CO_334.0000012",
"RTNO","root.number.counting.CO_334.0000011",
"TCHART","total.carotenoid.by.chart.1.8.CO_334.0000161",
"NOHAV","plant.stands.harvested.counting.CO_334.0000010")
knitr::kable(traitabbrevs,booktabs=TRUE)
dbdata<-renameAndSelectCols(traitabbrevs,indata=dbdata,customColsToKeep = "TrialType")
ifelse(dbdata$MCMDS<1 | dbdata$MCMDS>5,NA,dbdata$MCMDS)
vars(CMD1S<1 | CMD1S>5)
double(1.1,1,3)
is.double(1.1,1,3)
c(1.1,1,3)
c(1.1,1,3) %>% as.integer
dbdata<-dbdata %>%
mutate(CMD1S=ifelse(CMD1S<1 | CMD1S>5,NA,CMD1S),
CMD3S=ifelse(CMD3S<1 | CMD3S>5,NA,CMD3S),
CMD6S=ifelse(CMD6S<1 | CMD1S>5,NA,CMD6S),
CMD9S=ifelse(CMD9S<1 | CMD1S>5,NA,CMD9S),
DM=ifelse(DM>100 | DM<=0,NA,DM),
RTWT=ifelse(RTWT==0 | NOHAV==0 | is.na(NOHAV),NA,RTWT),
SHTWT=ifelse(SHTWT==0 | NOHAV==0 | is.na(NOHAV),NA,SHTWT),
RTNO=ifelse(RTNO==0 | NOHAV==0 | is.na(NOHAV),NA,RTNO),
NOHAV=ifelse(NOHAV==0,NA,NOHAV),
NOHAV=ifelse(NOHAV>42,NA,NOHAV),
RTNO=ifelse(!RTNO %in% 1:10000,NA,RTNO))
library(tidyverse); library(magrittr)
readDBdata<-function(phenotypeFile,metadataFile){
pheno<-read.csv(phenotypeFile,
na.strings = c("#VALUE!",NA,".",""," ","-","\""),
stringsAsFactors = F)
meta<-read.csv(metadataFile,
na.strings = c("#VALUE!",NA,".",""," ","-","\""),
stringsAsFactors = F) %>%
rename(programName=breedingProgramName,
programDescription=breedingProgramDescription,
programDbId=breedingProgramDbId)
indata<-left_join(pheno,meta) %>%
filter(observationLevel=="plot")
return(indata) }
phenotypeFile<-"data/example_phenotype_download.csv"
metadataFile<-"data/example_metadata_download.csv"
dbdata<-readDBdata(phenotypeFile,metadataFile)
makeTrialTypeVar<-function(indata){
# This is peculiar to what works (for me) for IITA
# Can customize this or add lines to grab TrialTypes for each breeding program
outdata<-indata %>%
mutate(TrialType=ifelse(grepl("CE|clonal|13NEXTgenC1",studyName,ignore.case = T),"CET",NA),
TrialType=ifelse(grepl("EC",studyName,ignore.case = T),"ExpCET",TrialType),
TrialType=ifelse(grepl("PYT",studyName,ignore.case = T),"PYT",TrialType),
TrialType=ifelse(grepl("AYT",studyName,ignore.case = T),"AYT",TrialType),
TrialType=ifelse(grepl("UYT",studyName,ignore.case = T),"UYT",TrialType),
TrialType=ifelse(grepl("geneticgain|gg|genetic gain",studyName,ignore.case = T),"GeneticGain",TrialType),
TrialType=ifelse(grepl("Cassava",studyName,ignore.case = T) & grepl("/",studyName),"GeneticGain",TrialType),
TrialType=ifelse((grepl("clonal evaluation trial",!grepl("genetic gain",studyDescription,ignore.case = T),
ignore.case = T)),"CET",TrialType),
TrialType=ifelse(grepl("preliminary yield trial",studyDescription,ignore.case = T),"PYT",TrialType),
TrialType=ifelse(grepl("Crossingblock|GS.C4.CB|cross",studyName) & is.na(TrialType),"CrossingBlock",TrialType),
TrialType=ifelse(grepl("NCRP",studyName) & is.na(TrialType),"NCRP",TrialType),
TrialType=ifelse(grepl("conservation",studyName) & is.na(TrialType),"Conservation",TrialType))
return(outdata) }
dbdata<-makeTrialTypeVar(dbdata)
dbdata %>%
count(TrialType)
renameAndSelectCols<-function(traitabbrevs,indata,
customColsToKeep){
# @indata: data.frame with 2 cols (TraitAbbrev and TraitName)
### TraitName should match exactly to cassava ontology names
# @customColsToKeep: char. vec. of any custom cols you added and want to keep
outdata<-indata %>%
select(studyYear,programName,locationName,studyName,studyDesign,plotWidth,plotLength,fieldSize,
plantingDate,harvestDate,locationName,germplasmName,
replicate,blockNumber,plotNumber,rowNumber,colNumber,entryType,
trialType:numberReps,folderName,
all_of(customColsToKeep),
all_of(traitabbrevs$TraitName)) %>%
pivot_longer(cols = traitabbrevs$TraitName,
names_to = "TraitName",
values_to = "Value") %>%
left_join(.,traitabbrevs) %>%
select(-TraitName) %>%
pivot_wider(names_from = TraitAbbrev,
values_from = "Value")
return(outdata) }
traitabbrevs<-tribble(~TraitAbbrev,~TraitName,
"CMD1S","cassava.mosaic.disease.severity.1.month.evaluation.CO_334.0000191",
"CMD3S","cassava.mosaic.disease.severity.3.month.evaluation.CO_334.0000192",
"CMD6S","cassava.mosaic.disease.severity.6.month.evaluation.CO_334.0000194",
"CMD9S","cassava.mosaic.disease.severity.9.month.evaluation.CO_334.0000193",
"DM","dry.matter.content.percentage.CO_334.0000092",
"PLTHT","plant.height.measurement.in.cm.CO_334.0000018",
"BRNHT1","first.apical.branch.height.measurement.in.cm.CO_334.0000106",
"SHTWT","fresh.shoot.weight.measurement.in.kg.per.plot.CO_334.0000016",
"RTWT","fresh.storage.root.weight.per.plot.CO_334.0000012",
"RTNO","root.number.counting.CO_334.0000011",
"TCHART","total.carotenoid.by.chart.1.8.CO_334.0000161",
"NOHAV","plant.stands.harvested.counting.CO_334.0000010")
dbdata<-renameAndSelectCols(traitabbrevs,indata=dbdata,customColsToKeep = "TrialType")
dbdata<-dbdata %>%
mutate(CMD1S=ifelse(CMD1S<1 | CMD1S>5,NA,CMD1S),
CMD3S=ifelse(CMD3S<1 | CMD3S>5,NA,CMD3S),
CMD6S=ifelse(CMD6S<1 | CMD1S>5,NA,CMD6S),
CMD9S=ifelse(CMD9S<1 | CMD1S>5,NA,CMD9S),
DM=ifelse(DM>100 | DM<=0,NA,DM),
RTWT=ifelse(RTWT==0 | NOHAV==0 | is.na(NOHAV),NA,RTWT),
SHTWT=ifelse(SHTWT==0 | NOHAV==0 | is.na(NOHAV),NA,SHTWT),
RTNO=ifelse(RTNO==0 | NOHAV==0 | is.na(NOHAV),NA,RTNO),
NOHAV=ifelse(NOHAV==0,NA,NOHAV),
NOHAV=ifelse(NOHAV>42,NA,NOHAV),
RTNO=ifelse(!RTNO %in% 1:10000,NA,RTNO))
dbdata<-dbdata %>%
mutate(HI=RTWT/(RTWT+SHTWT))
dbdata %>%
group_by(programName,locationName,studyYear,studyName,studyDesign) %>%
summarize(MaxNOHAV=max(NOHAV, na.rm=T))
dbdata %>%
group_by(programName,locationName,studyYear,studyName,studyDesign) %>%
summarize(MaxNOHAV=max(NOHAV, na.rm=T)) %>%
mutate(MaxNOHAV=ifelse(MaxNOHAV=="-Inf",NA,MaxNOHAV))
maxNOHAV_byStudy<-dbdata %>%
group_by(programName,locationName,studyYear,studyName,studyDesign) %>%
summarize(MaxNOHAV=max(NOHAV, na.rm=T)) %>%
ungroup() %>%
mutate(MaxNOHAV=ifelse(MaxNOHAV=="-Inf",NA,MaxNOHAV))
dbdata<-left_join(dbdata,maxNOHAV_byStudy) %>%
mutate(FYLD=RTWT/(MaxNOHAV*PlotSpacing)*10,
TOPYLD=SHTWT/(MaxNOHAV*PlotSpacing)*10)
dbdata<-dbdata %>%
mutate(PlotSpacing=ifelse(programName!="IITA",1,
ifelse(studyYear<2013,1,
ifelse(TrialType %in% c("CET","GeneticGain","ExpCET"),1,0.8))))
maxNOHAV_byStudy<-dbdata %>%
group_by(programName,locationName,studyYear,studyName,studyDesign) %>%
summarize(MaxNOHAV=max(NOHAV, na.rm=T)) %>%
ungroup() %>%
mutate(MaxNOHAV=ifelse(MaxNOHAV=="-Inf",NA,MaxNOHAV))
dbdata<-left_join(dbdata,maxNOHAV_byStudy) %>%
mutate(FYLD=RTWT/(MaxNOHAV*PlotSpacing)*10,
TOPYLD=SHTWT/(MaxNOHAV*PlotSpacing)*10)
dbdata<-dbdata %>%
mutate(MCMDS=rowMeans(.[,c("CMD1S","CMD3S","CMD6S","CMD9S")], na.rm = T)) %>%
select(-CMD1S,-CMD3S,-CMD6S,-CMD9S,-RTWT,-SHTWT)
dbdata %>% count(locationName)
serve_site()
bookdown:::serve_book()
# create explicitly nested experimental design variables
# intended for use in downstream analyses
dbdata<-dbdata %>%
mutate(yearInLoc=paste0(programName,"_",locationName,"_",studyYear),
trialInLocYr=paste0(yearInLoc,"_",studyName),
repInTrial=paste0(trialInLocYr,"_",replicate),
blockInRep=paste0(repInTrial,"_",blockNumber))
library(tidyverse); library(magrittr);
dbdata<-readRDS("data/example_data_cleaned.rds")
library(tidyverse); library(magrittr)
phenos <- readRDS(url("https://raw.github.com/wolfemd/IITA_2019GS/master/data/IITA_ExptDesignsDetected_72619.rds"))
trialsForExample<-phenos %>%
filter(grepl(".GS.|gain",studyName,ignore.case = T),
studyYear %in% c("2016","2017"),
!grepl("ungenotyped",studyName))
trialsForExample<-unique(trialsForExample$studyName)
rawphenos<-read.csv("~/Google Drive/NextGenGS/NGC_BigData/DatabaseDownload_72419/2019-07-24T144915phenotype_download.csv",
na.strings = c("#VALUE!",NA,".",""," ","-","\""),
stringsAsFactors = F)
examplerawphenos<-rawphenos %>%
filter(studyName %in% trialsForExample)
snps<-readRDS("~/Google Drive/NextGenGS/NGC_BigData/DosageMatrix_RefPanelAndGSprogeny_ReadyForGP_73019.rds")
dim(snps)
phenos %>%
filter(studyName %in% trialsForExample)
phenos %>%
filter(studyName %in% trialsForExample) %>%
select(studyName,TrialData) %>%
unnest()
phenos %>%
filter(studyName %in% trialsForExample) %>%
select(studyName,TrialData) %>%
unnest(cols = c(TrialData))
library(tidyverse); library(magrittr)
cleanphenos <- readRDS(url("https://raw.github.com/wolfemd/IITA_2019GS/master/data/IITA_ExptDesignsDetected_72619.rds"))
cleanphenos2keep<-cleanphenos %>%
filter(grepl(".GS.|gain",studyName,ignore.case = T),
studyYear %in% c("2016","2017"),
!grepl("ungenotyped",studyName))
trialsForExample<-unique(cleanphenos2keep$studyName)
cleanphenos2keep<-cleanphenos2keep %>%
unnest(cols = c(TrialData))
cleanphenos2keep
cleanphenos2keep %>%
select(studyName,TrialData) %>%
unnest(cols = c(TrialData))
cleanphenos2keep %>%
select(germplasmName,FullSampleName) %>%
distinct
cleanphenos2keep<-cleanphenos2keep %>%
select(studyName,TrialData) %>%
unnest(cols = c(TrialData))
cleanphenos2keep %>%
select(germplasmName,FullSampleName) %>%
distinct
geno2pheno<-cleanphenos2keep %>%
select(germplasmName,FullSampleName) %>%
distinct
table(geno2pheno$FullSampleName %in% rownames(snps))
geno2pheno$FullSampleName[geno2pheno$FullSampleName %in% rownames(snps)]
geno2pheno$FullSampleName[!geno2pheno$FullSampleName %in% rownames(snps)]
geno2pheno$FullSampleName[geno2pheno$FullSampleName %in% rownames(snps) & !is.na(geno2pheno$FullSampleName)]
table(geno2pheno$FullSampleName[!is.na(geno2pheno$FullSampleName)] %in% rownames(snps))
geno2pheno<-cleanphenos2keep %>%
select(germplasmName,FullSampleName) %>%
distinct %>%
filter(!is.na(FullSampleName),
FullSampleName %in% rownames(snps))
geno2pheno %>% count(FullSampleName) %>% arrange(desc(n))
snps<-snps[rownames(snps) %in% geno2pheno$FullSampleName,sample(1:ncol(snps),size = 2000, replace = F)]
library(tidyverse); library(magrittr)
cleanphenos <- readRDS(url("https://raw.github.com/wolfemd/IITA_2019GS/master/data/IITA_ExptDesignsDetected_72619.rds"))
cleanphenos2keep<-cleanphenos %>%
filter(grepl(".GS.|gain",studyName,ignore.case = T),
studyYear %in% c("2016","2017"),
!grepl("ungenotyped",studyName))
trialsForExample<-unique(cleanphenos2keep$studyName)
snps<-readRDS("~/Google Drive/NextGenGS/NGC_BigData/DosageMatrix_RefPanelAndGSprogeny_ReadyForGP_73019.rds")
dim(snps) # [1] 21856 68814
cleanphenos2keep<-cleanphenos2keep %>%
select(studyName,TrialData) %>%
unnest(cols = c(TrialData))
geno2pheno<-cleanphenos2keep %>%
select(germplasmName,FullSampleName) %>%
distinct %>%
filter(!is.na(FullSampleName),
FullSampleName %in% rownames(snps)) %>%
rename(DNAsampleName=FullSampleName)
set.seed(42)
snps<-snps[rownames(snps) %in% geno2pheno$FullSampleName,sample(1:ncol(snps),size = 2000, replace = F)]
saveRDS(snps,file="data/example_snps.rds")
saveRDS(geno2pheno,file="data/example_geno2pheno.rds")
snps<-readRDS("~/Google Drive/NextGenGS/NGC_BigData/DosageMatrix_RefPanelAndGSprogeny_ReadyForGP_73019.rds")
dim(snps) # [1] 21856 68814
cleanphenos2keep<-cleanphenos2keep %>%
select(studyName,TrialData) %>%
unnest(cols = c(TrialData))
library(tidyverse); library(magrittr)
cleanphenos <- readRDS(url("https://raw.github.com/wolfemd/IITA_2019GS/master/data/IITA_ExptDesignsDetected_72619.rds"))
cleanphenos2keep<-cleanphenos %>%
filter(grepl(".GS.|gain",studyName,ignore.case = T),
studyYear %in% c("2016","2017"),
!grepl("ungenotyped",studyName))
trialsForExample<-unique(cleanphenos2keep$studyName)
snps<-readRDS("~/Google Drive/NextGenGS/NGC_BigData/DosageMatrix_RefPanelAndGSprogeny_ReadyForGP_73019.rds")
cleanphenos2keep<-cleanphenos2keep %>%
select(studyName,TrialData) %>%
unnest(cols = c(TrialData))
geno2pheno<-cleanphenos2keep %>%
select(germplasmName,FullSampleName) %>%
distinct %>%
filter(!is.na(FullSampleName),
FullSampleName %in% rownames(snps)) %>%
rename(DNAname=FullSampleName)
set.seed(42)
snps<-snps[rownames(snps) %in% geno2pheno$FullSampleName,sample(1:ncol(snps),size = 2000, replace = F)]
geno2pheno
snps<-readRDS("~/Google Drive/NextGenGS/NGC_BigData/DosageMatrix_RefPanelAndGSprogeny_ReadyForGP_73019.rds")
