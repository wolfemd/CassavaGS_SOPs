"0","makeTrialTypeVar<-function(indata){"
"0","  # This is peculiar to what works (for me) for IITA"
"0","  # Can customize this or add lines to grab TrialTypes for each breeding program"
"0","  outdata<-indata %>% "
"0","    mutate(TrialType=ifelse(grepl(""CE|clonal|13NEXTgenC1"",studyName,ignore.case = T),""CET"",NA),"
"0","           TrialType=ifelse(grepl(""EC"",studyName,ignore.case = T),""ExpCET"",TrialType),"
"0","           TrialType=ifelse(grepl(""PYT"",studyName,ignore.case = T),""PYT"",TrialType),"
"0","           TrialType=ifelse(grepl(""AYT"",studyName,ignore.case = T),""AYT"",TrialType),"
"0","           TrialType=ifelse(grepl(""UYT"",studyName,ignore.case = T),""UYT"",TrialType),"
"0","           TrialType=ifelse(grepl(""geneticgain|gg|genetic gain"",studyName,ignore.case = T),""GeneticGain"",TrialType),"
"0","           TrialType=ifelse(grepl(""Cassava"",studyName,ignore.case = T) & grepl(""/"",studyName),""GeneticGain"",TrialType),"
"0","           TrialType=ifelse((grepl(""clonal evaluation trial"",!grepl(""genetic gain"",studyDescription,ignore.case = T), "
"0","                                   ignore.case = T)),""CET"",TrialType),"
"0","           TrialType=ifelse(grepl(""preliminary yield trial"",studyDescription,ignore.case = T),""PYT"",TrialType),"
"0","           TrialType=ifelse(grepl(""Crossingblock|GS.C4.CB|cross"",studyName) & is.na(TrialType),""CrossingBlock"",TrialType),"
"0","           TrialType=ifelse(grepl(""NCRP"",studyName) & is.na(TrialType),""NCRP"",TrialType),"
"0","           TrialType=ifelse(grepl(""conservation"",studyName) & is.na(TrialType),""Conservation"",TrialType))"
"0","  return(outdata) }"
"0",""
